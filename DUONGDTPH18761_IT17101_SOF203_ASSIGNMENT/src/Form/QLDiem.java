/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import ClassOOp.Grade;
import ClassOOp.Students;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 98tae
 */
public class QLDiem extends javax.swing.JFrame {

    Connection con;
    DefaultTableModel dtm;
    int viTri;
    int maxa;
    ArrayList<ClassOOp.Students> listStudents;
    private ArrayList<ClassOOp.Grade> qldiem = new ArrayList<>();
    int ch;

    /**
     * Creates new form QLDiem
     */
    public QLDiem() {
        initComponents();
        setTitle("Quản Lý Điểm");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        con = Helper.Helper_Connection.Connec();
        dtm = (DefaultTableModel) tblQLDIEM.getModel();
        listStudents = new ArrayList<>();
        loadDataToTableTop3();
        viTri = tblQLDIEM.getSelectedRow();
        maxa = tblQLDIEM.getRowCount();
        LoadDataToListStudent();
        loadDataToArraylistGrade();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtTimMaSV = new javax.swing.JTextField();
        btnSearch = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtHoTenSV = new javax.swing.JTextField();
        txtMaSV = new javax.swing.JTextField();
        txtTiengAnh = new javax.swing.JTextField();
        txtGiaoDucTC = new javax.swing.JTextField();
        txtTinHoc = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lbDTB = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnbackfirst = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btnnext = new javax.swing.JButton();
        btnnextlast = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQLDIEM = new javax.swing.JTable();
        cbbSV = new javax.swing.JComboBox<>();
        btnDSSV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Mã SV :");

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/Search.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Quản Lý Điểm Sinh Viên");

        jLabel2.setText("Tìm Kiếm");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Họ Tên SV :");

        jLabel5.setText("Mã SV :");

        jLabel6.setText("Tiếng Anh");

        jLabel7.setText("Tin Học");

        jLabel8.setText("Giáo Dục TC");

        txtHoTenSV.setEditable(false);
        txtHoTenSV.setForeground(new java.awt.Color(0, 0, 255));

        txtMaSV.setForeground(new java.awt.Color(51, 51, 255));

        jLabel9.setText("Điểm TB");

        lbDTB.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbDTB.setForeground(new java.awt.Color(0, 0, 204));
        lbDTB.setText("0.0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGiaoDucTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTiengAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTinHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lbDTB)
                        .addGap(16, 16, 16)))
                .addGap(46, 46, 46))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtGiaoDucTC, txtHoTenSV, txtMaSV, txtTiengAnh, txtTinHoc});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtHoTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtTiengAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel7))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtTinHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(lbDTB))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtGiaoDucTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/Add.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/Save as.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/Delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/Edit.png"))); // NOI18N
        btnUpdate.setText("UpDate");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnbackfirst.setText("<<");
        btnbackfirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackfirstActionPerformed(evt);
            }
        });

        btnback.setText("<");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btnnext.setText(">");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        btnnextlast.setText(">>");
        btnnextlast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextlastActionPerformed(evt);
            }
        });

        tblQLDIEM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SV", "Họ Tên", "Tiếng Anh", "Tin Học", "GDTC", "Điểm TB"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQLDIEM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLDIEMMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQLDIEM);

        cbbSV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3 Sinh Viên Có Điểm Cao Nhất", "Danh Sách Điểm Sinh Viên" }));
        cbbSV.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbSVItemStateChanged(evt);
            }
        });

        btnDSSV.setText("DSSV");
        btnDSSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDSSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(180, 180, 180)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(cbbSV, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(91, 91, 91)
                                        .addComponent(btnbackfirst)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnback)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnnext)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnnextlast)))
                        .addGap(0, 52, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnSave, btnUpdate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(62, 62, 62)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnbackfirst)
                            .addComponent(btnback)
                            .addComponent(btnnext)
                            .addComponent(btnnextlast))
                        .addGap(20, 20, 20)
                        .addComponent(cbbSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNew)
                        .addGap(32, 32, 32)
                        .addComponent(btnSave)
                        .addGap(40, 40, 40)
                        .addComponent(btnDelete)
                        .addGap(33, 33, 33)
                        .addComponent(btnUpdate)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDSSV)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
        if (Helper.MyValidate.isEmpty(txtTimMaSV, "Vui Lòng Điền Mã SV Vào Tìm Kiếm")) {
            return;
        }
        clearForm();
        try {
            String sql = "select STUDENTS.MASV,STUDENTS.Hoten,Tienganh,Tinhoc,GDTC,(Tienganh+GDTC+Tinhoc)/3 as 'DTB'\n"
                    + "from GRADE join STUDENTS on GRADE.MASV = STUDENTS.MASV where STUDENTS.MASV = ?";
            PreparedStatement ptrs = con.prepareStatement(sql);
            ptrs.setString(1, txtTimMaSV.getText());
            ResultSet rs = ptrs.executeQuery();
            while (rs.next()) {
                double dtb = rs.getDouble(6);
                String aa =  String.format("%.2f", dtb);
                if (aa.contains(".00")) {
                    if (dtb == 10) {
                        aa = aa.substring(0,2);
                    }else{
                        aa = aa.substring(0, 1);
                    }
                }
                
                txtMaSV.setText(rs.getString("MASV"));
                txtHoTenSV.setText(rs.getString("Hoten"));
                txtTiengAnh.setText(String.valueOf(rs.getDouble(3)));
                txtTinHoc.setText(String.valueOf(rs.getDouble(4)));
                txtGiaoDucTC.setText(String.valueOf(rs.getDouble(5)));
                lbDTB.setText(aa);
                return;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        Helper.MyMess.msgTrue("Không Có Mã SV");
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (ValidateFormQLD()) {
            return;
        }
        loadDataToTableALL();
        for (int i = 0; i < tblQLDIEM.getRowCount(); i++) {
            if (txtMaSV.getText().equals(tblQLDIEM.getValueAt(i, 0))) {
                Helper.MyMess.msgFalse("Sinh Viên Đã Có Điểm");
                return;
            }

        }
        for (int i = 0; i < listStudents.size(); i++) {
            if (txtMaSV.getText().equals(listStudents.get(i).getMaSV())) {
                try {

                } catch (Exception e) {
                }

                try {
                    int viq = qldiem.size() - 1;
                    Grade gr = qldiem.get(viq);
                    int ch = gr.getID() + 1;
                    String sql = "insert into GRADE values (?,?,?,?,?)";
                    PreparedStatement ptsm = con.prepareStatement(sql);
                    ptsm.setInt(1, ch);
                    ptsm.setString(2, txtMaSV.getText());
                    ptsm.setDouble(3, Double.parseDouble(txtTiengAnh.getText()));
                    ptsm.setDouble(4, Double.parseDouble(txtTinHoc.getText()));
                    ptsm.setDouble(5, Double.parseDouble(txtGiaoDucTC.getText()));
                    if (ptsm.executeUpdate() > 0) {
                        Helper.MyMess.msgTrue("Thêm Thành Công");
                        loadDataToTableALL();
                        loadDataToTableTop3();
                        loadDataToArraylistGrade();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                return;
            }
        }

        Helper.MyMess.msgFalse("Không có mã sv");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (Helper.MyValidate.isEmpty(txtMaSV, "trống mã sv")) {
            return;
        }
        if (Helper.MyValidate.isNotStudenCode(txtMaSV, "Sai Định Dạng Mã SV")) {
            return;
        }
        
        String sql = "delete from GRADE where MASV = ?";
        for (int i = 0; i < qldiem.size(); i++) {
            if (txtMaSV.getText().equals(qldiem.get(i).getMaSV())) {
                try {
                    PreparedStatement ptsm = con.prepareStatement(sql);
                    ptsm.setString(1, txtMaSV.getText());
                    if (ptsm.executeUpdate() > 0) {
                        Helper.MyMess.msgTrue("Xóa Thành Công");
                        loadDataToTableALL();
                        loadDataToTableTop3();
                        loadDataToArraylistGrade();
                        clearForm();
                        ch = qldiem.size();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                return;
            }
        }
        Helper.MyMess.msgFalse("Không Có Mã SV Cần xóa");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (ValidateFormQLD()) {
            return;}
        
        String sql = "update GRADE set Tienganh = ? , Tinhoc = ? , GDTC = ?\n"
                + "where MASV = ?";
        
        for (int i = 0; i < qldiem.size(); i++) {
            if (txtMaSV.getText().equals(qldiem.get(i).getMaSV())) {
                try {
                    PreparedStatement ptsm = con.prepareStatement(sql);
                    ptsm.setDouble(1, Double.parseDouble(txtTiengAnh.getText()));
                    ptsm.setDouble(2, Double.parseDouble(txtTinHoc.getText()));
                    ptsm.setDouble(3, Double.parseDouble(txtGiaoDucTC.getText()));
                    ptsm.setString(4, txtMaSV.getText());
                    if (ptsm.executeUpdate() > 0) {
                        Helper.MyMess.msgTrue("Update Thành Công");
                        if (cbbSV.getSelectedIndex() == 0) {
                            loadDataToTableALL();
                            loadDataToTableTop3();
                        }else{
                            loadDataToTableTop3();
                            loadDataToTableALL();
                        }
                        clearForm();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                return;
            }
        }
        Helper.MyMess.msgFalse("Không Có Mã SV Cần Update");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnbackfirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackfirstActionPerformed
        viTri = 0;
        txtMaSV.setText((String) tblQLDIEM.getValueAt(viTri, 0));
        txtHoTenSV.setText((String) tblQLDIEM.getValueAt(viTri, 1));
        txtTiengAnh.setText(tblQLDIEM.getValueAt(viTri, 2).toString());
        txtTinHoc.setText(tblQLDIEM.getValueAt(viTri, 3).toString());
        txtGiaoDucTC.setText(tblQLDIEM.getValueAt(viTri, 4).toString());
        lbDTB.setText(tblQLDIEM.getValueAt(viTri, 5).toString());

    }//GEN-LAST:event_btnbackfirstActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        if (viTri == -1) {
            viTri = 0;
        }
        viTri--;
        if (viTri < 0) {
            viTri = 0;
            return;
        }
        txtMaSV.setText((String) tblQLDIEM.getValueAt(viTri, 0));
        txtHoTenSV.setText((String) tblQLDIEM.getValueAt(viTri, 1));
        txtTiengAnh.setText(tblQLDIEM.getValueAt(viTri, 2).toString());
        txtTinHoc.setText(tblQLDIEM.getValueAt(viTri, 3).toString());
        txtGiaoDucTC.setText(tblQLDIEM.getValueAt(viTri, 4).toString());
        lbDTB.setText(tblQLDIEM.getValueAt(viTri, 5).toString());

    }//GEN-LAST:event_btnbackActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        
        viTri++;
        if (viTri > maxa - 1) {
            viTri = maxa - 1;
            return;
        }
        txtMaSV.setText((String) tblQLDIEM.getValueAt(viTri, 0));
        txtHoTenSV.setText((String) tblQLDIEM.getValueAt(viTri, 1));
        txtTiengAnh.setText(tblQLDIEM.getValueAt(viTri, 2).toString());
        txtTinHoc.setText(tblQLDIEM.getValueAt(viTri, 3).toString());
        txtGiaoDucTC.setText(tblQLDIEM.getValueAt(viTri, 4).toString());
        lbDTB.setText(tblQLDIEM.getValueAt(viTri, 5).toString());
    }//GEN-LAST:event_btnnextActionPerformed

    private void btnnextlastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextlastActionPerformed
        viTri = tblQLDIEM.getRowCount() - 1;

        txtMaSV.setText((String) tblQLDIEM.getValueAt(viTri, 0));
        txtHoTenSV.setText((String) tblQLDIEM.getValueAt(viTri, 1));
        txtTiengAnh.setText(tblQLDIEM.getValueAt(viTri, 2).toString());
        txtTinHoc.setText(tblQLDIEM.getValueAt(viTri, 3).toString());
        txtGiaoDucTC.setText(tblQLDIEM.getValueAt(viTri, 4).toString());
        lbDTB.setText(tblQLDIEM.getValueAt(viTri, 5).toString());

    }//GEN-LAST:event_btnnextlastActionPerformed

    private void cbbSVItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbSVItemStateChanged
        if (cbbSV.getSelectedIndex() == 0) {
            loadDataToTableTop3();
            maxa = tblQLDIEM.getRowCount();
            clearForm();
            viTri = -1;
        } if (cbbSV.getSelectedIndex() == 1) {
            loadDataToTableALL();
            clearForm();
            maxa = tblQLDIEM.getRowCount();
            
        }
    }//GEN-LAST:event_cbbSVItemStateChanged

    private void tblQLDIEMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLDIEMMouseClicked
        viTri = tblQLDIEM.getSelectedRow();
        if (viTri == -1) {
            return;
        }
        txtMaSV.setText((String) tblQLDIEM.getValueAt(viTri, 0));
        txtHoTenSV.setText((String) tblQLDIEM.getValueAt(viTri, 1));
        txtTiengAnh.setText(tblQLDIEM.getValueAt(viTri, 2).toString());
        txtTinHoc.setText(tblQLDIEM.getValueAt(viTri, 3).toString());
        txtGiaoDucTC.setText(tblQLDIEM.getValueAt(viTri, 4).toString());
        lbDTB.setText(tblQLDIEM.getValueAt(viTri, 5).toString());
    }//GEN-LAST:event_tblQLDIEMMouseClicked

    private void btnDSSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDSSVActionPerformed
        new DSSV().setVisible(true);
    }//GEN-LAST:event_btnDSSVActionPerformed
    private void loadDataToTableTop3() {
        try {
            String sql = "Select top(3)(Tienganh+GDTC+Tinhoc)/3 as 'DTB',STUDENTS.MASV,Hoten,Tienganh,Tinhoc,GDTC  \n"
                    + "from GRADE join STUDENTS on GRADE.MASV = STUDENTS.MASV\n"
                    + "order by DTB desc";
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            dtm.setRowCount(0);
            while (rs.next()) {
                double dtb = rs.getDouble("DTB");
                String aa =  String.format("%.2f", dtb);
                if (aa.contains(".00")) {
                    if (dtb == 10) {
                        aa = aa.substring(0,2);
                    }else{
                        aa = aa.substring(0, 1);
                    }
                }
                Object[] rowData = new Object[]{
                    rs.getString("MASV"),
                    rs.getString("Hoten"),
                    rs.getDouble("Tienganh"),
                    rs.getDouble("Tinhoc"),
                    rs.getDouble("GDTC"),
                    aa
                };
                dtm.addRow(rowData);
            }
            stm.close();
            rs.close();
        } catch (Exception e) {
        }

    }

    private void loadDataToTableALL() {
        try {
            String sql = "Select (Tienganh+GDTC+Tinhoc)/3 as 'DTB',STUDENTS.MASV,Hoten,Tienganh,Tinhoc,GDTC  \n"
                    + "from GRADE join STUDENTS on GRADE.MASV = STUDENTS.MASV";
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            dtm.setRowCount(0);
            while (rs.next()) {
                double dtb = rs.getDouble("DTB");
                String tb =  String.format("%.2f", dtb);
                if (tb.contains(".00")) {
                    if (dtb == 10) {
                        tb = tb.substring(0,2);
                    }else{
                        tb = tb.substring(0, 1);
                    }
                }
                Object[] rowData = new Object[]{
                    rs.getString("MASV"),
                    rs.getString("Hoten"),
                    rs.getDouble("Tienganh"),
                    rs.getDouble("Tinhoc"),
                    rs.getDouble("GDTC"),
                    tb,};
                dtm.addRow(rowData);
            }
            stm.close();
            rs.close();
        } catch (Exception e) {
        }

    }

    private void clearForm() {
        txtMaSV.setText("");
        txtHoTenSV.setText("");
        txtTiengAnh.setText("");
        txtTinHoc.setText("");
        txtGiaoDucTC.setText("");
        lbDTB.setText("0.0");

    }

    private void LoadDataToListStudent() {
        try {
            String sql = "select * from STUDENTS";
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                String masv = rs.getString(1);
                String hoten = rs.getString(2);
                String email = rs.getString(2);
                int sodt = rs.getInt(4);
                int gioitinh = rs.getInt(5);
                String diachi = rs.getString(6);
                listStudents.add(new Students(masv, hoten, email, diachi, sodt, gioitinh));
            }
        } catch (Exception e) {
        }

    }

    private boolean ValidateFormQLD() {
        if (Helper.MyValidate.isEmpty(txtMaSV, "Trống Mã Sinh Viên")) {
            return true;
        }
        if (Helper.MyValidate.isEmpty(txtTiengAnh, "Trống Điểm Tiếng Anh")) {
            return true;
        }
        if (Helper.MyValidate.isEmpty(txtTinHoc, "Trống Điểm Tin Học")) {
            return true;
        }
        if (Helper.MyValidate.isEmpty(txtGiaoDucTC, "Trống Điểm GDTC")) {
            return true;
        }
        if (Helper.MyValidate.isNotStudenCode(txtMaSV, "Lỗi Mã SV")) {
            return true;
        }
        if (Helper.MyValidate.isNotNumberScores(txtTiengAnh, "Nhập Sai Định Dạng Điểm", "Vui Lòng Nhập Điểm từ 0-10")) {
            return true;
        }
        if (Helper.MyValidate.isNotNumberScores(txtTinHoc, "Nhập Sai Định Dạng Điểm", "Vui Lòng Nhập Điểm từ 0-10")) {
            return true;
        }
        if (Helper.MyValidate.isNotNumberScores(txtGiaoDucTC, "Nhập Sai Định Dạng Điểm", "Vui Lòng Nhập Điểm từ 0-10")) {
            return true;
        }
        return false;
    }
    
    private void Chuandoan(){
        if (cbbSV.getSelectedIndex() == 1) {
            loadDataToTableALL();
        }
    
    }
    
    public void closer(){
     setDefaultCloseOperation(DISPOSE_ON_CLOSE);
     dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    
    }
    

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(QLDiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(QLDiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(QLDiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(QLDiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new QLDiem().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDSSV;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JToggleButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnbackfirst;
    private javax.swing.JButton btnnext;
    private javax.swing.JButton btnnextlast;
    private javax.swing.JComboBox<String> cbbSV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDTB;
    private javax.swing.JTable tblQLDIEM;
    private javax.swing.JTextField txtGiaoDucTC;
    private javax.swing.JTextField txtHoTenSV;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtTiengAnh;
    private javax.swing.JTextField txtTimMaSV;
    private javax.swing.JTextField txtTinHoc;
    // End of variables declaration//GEN-END:variables

    private void loadDataToArraylistGrade() {
        try {
            String sql = "select * from GRADE";
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                qldiem.add(new Grade(rs.getInt(1), rs.getString(2), rs.getDouble(3), rs.getDouble(4), rs.getDouble(5)));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
