/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiemtra1;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 98tae
 */
public class BaiKtra extends javax.swing.JFrame {

    Connection con;
    DefaultTableModel dtm;

    /**
     * Creates new form BaiKtra
     */
    public BaiKtra() {
        initComponents();
        setLocationRelativeTo(null);
        con = Helper.LHelper.ketNoi("TestAss1");
        dtm = (DefaultTableModel) tblKT.getModel();
        if (con != null) {
            System.out.println("1");
            LoadDataToTable();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbbKT = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKT = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMSV = new javax.swing.JTextField();
        txtHT = new javax.swing.JTextField();
        txtDiem = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbbKT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM1012", "COM1022", "COM2012", "COM2032", "ENT1112", "ENT1122", "ENT2222", "MUL1013", "SKI1013", "VIE103", "WEB1012" }));
        cbbKT.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbKTItemStateChanged(evt);
            }
        });

        jLabel1.setText("Môn học");

        tblKT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SV", "Họ Tên", "Điểm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKT);

        jLabel2.setText("Mã Sinh Viên");

        jLabel3.setText("Họ Tên");

        jLabel4.setText("Điểm");

        txtHT.setEditable(false);

        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(jLabel1)
                        .addGap(45, 45, 45)
                        .addComponent(cbbKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMSV)
                    .addComponent(txtHT)
                    .addComponent(txtDiem, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnupdate)
                    .addComponent(btnadd)
                    .addComponent(btndelete))
                .addGap(87, 87, 87))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnadd, btndelete, btnupdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnadd))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnupdate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btndelete))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        for (int i = 0; i < tblKT.getRowCount(); i++) {
            if (txtMSV.getText().equals(tblKT.getValueAt(i, 0))) {
                JOptionPane.showMessageDialog(this, "Trùng");
                return;

            }

        }

        try {
            String sql = " insert into DIEM values(?,?,?)";
            PreparedStatement ptrs = con.prepareStatement(sql);
            ptrs.setString(1, txtMSV.getText());
            ptrs.setString(2, String.valueOf(cbbKT.getSelectedItem()));
            ptrs.setInt(3, Integer.parseInt(txtDiem.getText()));
            if (ptrs.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(this, "thanfh coong");
                LoadDataToTable();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnaddActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        try {
            String sql = " Update DIEM set diem= ?\n"
                    + " where Masv = ? and MaMH = ? ";
            PreparedStatement ptrs = con.prepareStatement(sql);

            ptrs.setString(3, String.valueOf(cbbKT.getSelectedItem()));
            ptrs.setInt(1, Integer.parseInt(txtDiem.getText()));
            ptrs.setString(2, txtMSV.getText());

            if (ptrs.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(this, "thanfh coong");
                LoadDataToTable();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        try {
            String sql = " delete from DIEM \n"
                    + " where Masv = ? and MaMH = ?";
            PreparedStatement ptrs = con.prepareStatement(sql);
            ptrs.setString(1, txtMSV.getText());
            ptrs.setString(2, String.valueOf(cbbKT.getSelectedItem()));
            if (ptrs.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(this, "thanfh coong");
                LoadDataToTable();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btndeleteActionPerformed

    private void cbbKTItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbKTItemStateChanged
        LoadDataToTable();
    }//GEN-LAST:event_cbbKTItemStateChanged

    private void tblKTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKTMouseClicked
        int index = tblKT.getSelectedRow();
        if (index == -1) {
            return;
        }
        txtMSV.setText((String) tblKT.getValueAt(index, 0));
        txtHT.setText((String) tblKT.getValueAt(index, 1));
        txtDiem.setText(String.valueOf(tblKT.getValueAt(index, 2)));
    }//GEN-LAST:event_tblKTMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaiKtra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaiKtra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaiKtra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaiKtra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaiKtra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cbbKT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKT;
    private javax.swing.JTextField txtDiem;
    private javax.swing.JTextField txtHT;
    private javax.swing.JTextField txtMSV;
    // End of variables declaration//GEN-END:variables

    private void LoadDataToTable() {
        try {
            String sql = " select SINHVIEN.MaSV,HoTenSV,diem from DIEM \n"
                    + " join SINHVIEN on diem.Masv = SINHVIEN.MaSV\n"
                    + " where MaMH = ?";
            PreparedStatement ptrs = con.prepareStatement(sql);
            ptrs.setString(1, String.valueOf(cbbKT.getSelectedItem()));
            ResultSet rs = ptrs.executeQuery();
            dtm.setRowCount(0);
            while (rs.next()) {
                Object[] rowData = new Object[]{
                    rs.getString("MaSV"),
                    rs.getString("HoTenSV"),
                    rs.getInt("diem")
                };
                dtm.addRow(rowData);
            }
        } catch (Exception e) {
        }
    }
}
